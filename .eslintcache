[{"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\index.js":"1","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\Parent.jsx":"2","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\children.jsx":"3","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\child.jsx":"4","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\todolist.jsx":"5","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\todo.jsx":"6","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\App.jsx":"7","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\navigation.jsx":"8","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\tododetail.jsx":"9"},{"size":410,"mtime":1608886837479,"results":"10","hashOfConfig":"11"},{"size":220,"mtime":1608204091590,"results":"12","hashOfConfig":"11"},{"size":411,"mtime":1608204083693,"results":"13","hashOfConfig":"11"},{"size":153,"mtime":1608203925809,"results":"14","hashOfConfig":"11"},{"size":3139,"mtime":1608732848929,"results":"15","hashOfConfig":"11"},{"size":2688,"mtime":1608886864605,"results":"16","hashOfConfig":"11"},{"size":199,"mtime":1609171546796,"results":"17","hashOfConfig":"11"},{"size":509,"mtime":1608884401815,"results":"18","hashOfConfig":"11"},{"size":235,"mtime":1608887315779,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"x4dko0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\index.js",[],["41","42"],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\Parent.jsx",[],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\children.jsx",[],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\family\\child.jsx",[],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\todolist.jsx",["43"],"import React, { useEffect, useState, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Todo from './todo';\r\n\r\nconst TodoList = ({}) => {\r\n    let [todos, setTodos] = useState([]);\r\n    let [currentStatus, setCurrentStatus] = useState('열일');\r\n    let [writingMode, setWritingMode] = useState(false);\r\n    let [form, setForm] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/todos\")\r\n            .then((response) => {\r\n                setTodos(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const changeStatus = () => {\r\n        if (currentStatus === '열일') {\r\n            setCurrentStatus('휴식');\r\n        } else {\r\n            setCurrentStatus('열일');\r\n        }\r\n    }\r\n\r\n    const changeWritingMode = () => {\r\n        setWritingMode(!writingMode);\r\n    }\r\n\r\n\r\n    const create = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/todos', form)\r\n            .then((response) => {\r\n                if(form.title && form.content){\r\n                    setTodos([...todos, response.data]);\r\n                } else {\r\n                    console.log('제목과 내용이 모두 입력되지 않았습니다.')\r\n                }\r\n            changeWritingMode()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const changeForm = (data) => {\r\n        setForm({\r\n            ...form,\r\n            [data.target.name]: data.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n\r\n\r\n                <button onClick={changeStatus}>{currentStatus}</button>\r\n                {currentStatus === '휴식' ?\r\n                    null\r\n                    :\r\n                    <div>\r\n                        <div>\r\n\r\n                            {writingMode ?\r\n                                <form onSubmit={(event) => { create(event) }}>\r\n                                    <input type=\"text\" name=\"title\" placeholder=\"할일 제목\" onChange={(e) => { changeForm(e) }}></input>\r\n                                    <input type=\"text\" name=\"content\" placeholder=\"할일 내용\" onChange={(e) => { changeForm(e) }}></input>\r\n                                    <button type=\"submit\">등록</button>\r\n                                    <button onClick={changeWritingMode}>취소 </button>\r\n                                </form>\r\n                                :\r\n                                <button onClick={changeWritingMode}>할일 생성</button>\r\n                            }\r\n\r\n                        </div>\r\n                        <div>\r\n                            {todos.map((todo) => {\r\n                                return <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos}></Todo>\r\n                                \r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList;","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\todo.jsx",["44"],"import React, {useState, Fragment} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Todo = ({todo, todos, setTodos}) => {\r\n\r\n    \r\n    \r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [form, setForm] = useState({\r\n        title: todo.title,\r\n        content: todo.content\r\n    });\r\n\r\n    const changeForm= (data) => {\r\n        setForm({\r\n            ...form, [data.target.name]: data.target.value\r\n        })\r\n    }\r\n\r\n    const del = (todos) => {\r\n        axios.delete('/todos/'+ todo.id)\r\n        .then((response) => {\r\n            setTodos(todos.filter((todoData) => {\r\n                return todoData.id !== todo.id\r\n                \r\n            }))\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n    \r\n    const update = (event) => {\r\n        \r\n        axios.patch('/todos/' + todo.id, form)\r\n        .then((response) => {\r\n            setTodos(todos.map((todoData) => {\r\n                if (todoData.id === todo.id) {\r\n                    return response.data\r\n                }\r\n                return todoData\r\n            }\r\n            ))\r\n            \r\n            changeEditMode();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    const changeEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n  \r\n    <div className=\"todo-box\">\r\n        {editMode?\r\n           <form onSubmit={(event) => {update(event)}}>\r\n            <input type=\"text\" name=\"title\" value={form.title} placeholder=\"할일 제목\" onChange={(event) => changeForm(event)}></input>\r\n            <input type=\"text\" name=\"content\" value={form.content} placeholder=\"할일 내용\" onChange={(event) => changeForm(event)}></input>\r\n            <div className=\"button-box\">\r\n            <br></br>\r\n            <button type=\"submit\">수정완료</button>\r\n            <br></br>\r\n            <button type=\"button\" onClick={() => {changeEditMode()}}>취소</button>\r\n            </div>\r\n           </form>\r\n        :\r\n        <div>\r\n        <Link to={{ pathname : `/tododetail/${todo.id}`,\r\n                    state : {title : todo.title,\r\n                             content : todo.content}\r\n        }}>\r\n        <div className=\"text-box\">\r\n        Title : {todo.title}\r\n        Content : {todo.content}\r\n        </div>\r\n        </Link>\r\n        <div className=\"button-box\">\r\n        <br></br>\r\n        <button onClick={() => {changeEditMode()}}>수정</button>\r\n        <br></br>\r\n        <button onClick={() => {del(todos)}}>삭제</button>\r\n        </div>\r\n        </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\nexport default Todo","C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\App.jsx",[],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\navigation.jsx",[],"C:\\Users\\rad87\\Documents\\programming\\react_practice\\src\\todo\\tododetail.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":19,"nodeType":"51","messageId":"52","endLine":5,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":1,"column":26,"nodeType":"55","messageId":"56","endLine":1,"endColumn":34},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]